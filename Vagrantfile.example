# -*- mode: ruby -*-
# vi: set ft=ruby :
require 'yaml'

# Configuration
variables = YAML.load_file('variables.yml')

$default_system_name = "OpenRecords_" + Time.now.strftime("%m-%d-%Y_%H-%M")

$rhsn_username = variables['rhsn']['username'].to_s.empty? ? ENV['RHSN_USERNAME'] : variables['rhsn']['username']
$rhsn_password = variables['rhsn']['password'].to_s.empty? ? ENV['RHSN_PASSWORD'] : variables['rhsn']['password']
$rhsn_system_name = variables['rhsn']['computer_name'].to_s.empty? ? $default_system_name : variables['rhsn']['computer_name']


Vagrant.configure("2") do |config|
  config.vm.box = "rhel-7.6"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = variables["vm_options"]["vb_memory"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end



  if variables["proxy_settings"]["use_proxy"]
    # Proxy Configuration
    config.vm.provision "shell" do |s|
      s.inline = 'sudo cp /vagrant/build_scripts/proxy.sh /etc/profile.d/'
    end

    config.vm.provision :reload
  end

  # RedHat Subscription Management
  config.vm.provision "shell" do |s|
    s.path = "build_scripts/subscription_manager.sh"
    s.args = ["--username", $rhsn_username, "--password", $rhsn_password, "--name", $rhsn_system_name]
    if variables["proxy_settings"]["use_proxy"]
      s.args.push("use_proxy", variables["proxy_settings"]["use_proxy"], "proxy_host", variables["proxy_settings"]["proxy_host"], "proxy_port", variables["proxy_settings"]["proxy_port"], "proxy_user", variables["proxy_settings"]["proxy_user"], "proxy_password", variables["proxy_settings"]["proxy_password"])
    end
  end

  config.vm.provision :reload

  config.vm.provision "shell" do |s|
    s.inline = 'sudo yum -y groupinstall "Development Tools" && sudo /etc/init.d/vboxadd setup && echo "cd /vagrant" >> /home/vagrant/.bash_profile'
  end

  # Single server VM
  config.vm.define "default", primary: true do |default|
    default.vm.network "forwarded_port", guest: 80,   host: 8080
    default.vm.network "forwarded_port", guest: 443,  host: 8443
    default.vm.network "forwarded_port", guest: 5000, host: 8000
    default.vm.network "forwarded_port", guest: 5432, host: 8432
    default.vm.network "forwarded_port", guest: 8200, host: 8200
    default.vm.network "private_network", ip: "10.0.0.2"
    default.vm.provision "shell", path: "build_scripts/web_setup/web_setup.sh", args: 'single_server'
    default.vm.provision "shell", path: "build_scripts/es_setup/es_setup.sh", args: 'single_server'
    default.vm.provision "shell", path: "build_scripts/db_setup/db_setup.sh", args: 'single_server'
    default.vm.provision "shell", path: "build_scripts/app_setup/app_setup.sh"
  end

  # config.trigger.before :destroy do |trigger|  # add more VMs if necessary
  #   $script = <<-SCRIPT
  #   subscription-manager unsubscribe --all; true
  #   subscription-manager unregister; true
  #   SCRIPT

  #   trigger.run_remote = { inline: $script }
  # end

end
